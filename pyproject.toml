[project]
name = "ds-projen"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
authors = [{ name = "avr2002", email = "avr13405@gmail.com" }]
requires-python = ">=3.9"
dependencies = [
    "jinja2>=3.1.6",
    "projen>=0.91.20",
    # added because Python does not have a built-in way to write toml;
    # important for the pyproject.toml class
    "tomlkit>=0.13.2",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"


# https://github.com/astral-sh/ruff?tab=readme-ov-file#configuration
[tool.ruff]
line-length = 119
exclude = ['domains/advisory', 'domains/demand_generation']

# https://docs.astral.sh/ruff/rules/
[tool.ruff.lint]
extend-select = [
    # pycodestyle errors
    "E",
    # flake8-bugbear
    "B",
    # pylint equivalent rules
    "PL",
    # isort
    "I",
    # pydocstyle for docstrings
    "D",
    # pep8-naming
    "N",
]

# https://docs.astral.sh/ruff/rules/#mccabe-c90
[tool.ruff.lint.mccabe]
max-complexity = 10

[dependency-groups]
dev = [
    "mypy>=1.15.0",
    "rich>=14.0.0",
    "ruff>=0.9.6",
    "pytest>=8.3.5",
    "pytest-cov",
]

[tool.coverage.run]
branch = true

[tool.coverage.paths]
source = ["src/"]

[tool.coverage.report]
show_missing = true
omit = ["tests/artifacts/*"]
exclude_also = [
    "pragma: no cover",
    "if False",
    "def __repr__",
    "if self.debug",
    "raise AssertionError",
    "raise NotImplementedError",
    "raise MemoryError",
    "except DistributionNotFound",
    "except ImportError",
    "@abc.abstractmethod",
    "if 0:",
    "if __name__ == .__main__.:",
    "if typing.TYPE_CHECKING:",
    "if TYPE_CHECKING:",
]

[tool.coverage.html]
directory = "test-reports/htmlcov"

[tool.coverage.xml]
output = "test-reports/coverage.xml"

[tool.coverage.json]
output = "test-reports/coverage.json"
